/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v1/health": {
    get: {
      responses: {
        /** @description default response */
        200: never;
      };
    };
  };
  "/v1/inspect": {
    get: {
      responses: {
        /** @description default response */
        200: never;
      };
    };
  };
  "/v1/migrate": {
    post: operations["migrate"];
  };
  "/v1/rollback": {
    post: operations["rollback"];
  };
  "/v1/migrations": {
    get: operations["getMigrations"];
  };
  "/v1/execute": {
    post: operations["execute"];
  };
  "/v1/tables": {
    get: operations["getTables"];
  };
  "/v1/roles": {
    get: operations["getAllRolesAndPermissions"];
  };
  "/v1/schema": {
    get: operations["getSchema"];
  };
  "/v1/grid/{view}": {
    get: operations["getViewRows"];
  };
  "/v1/grid/{view}/row/{rowId}": {
    get: operations["getViewRow"];
  };
  "/v1/table/{table}": {
    get: operations["getRows"];
    post: operations["createRow"];
  };
  "/v1/table/{table}/row/{rowID}": {
    get: operations["getRow"];
    delete: operations["deleteRow"];
    patch: operations["updateRow"];
  };
  "/v1/user": {
    get: {
      responses: {
        /** @description default response */
        200: never;
      };
    };
  };
  "/v1/authorize": {
    post: operations["authorize"];
  };
  "/v1/auth/passwordless": {
    post: operations["passwordlessLogin"];
  };
  "/v1/signup": {
    post: operations["signup"];
  };
  "/v1/send-otp": {
    post: operations["verifyAccount"];
  };
  "/v1/auth/verify": {
    get: operations["verifyAccount"];
  };
  "/v1/link": {
    get: operations["link_account"];
  };
  "/v1/login/{provider}": {
    get: operations["login_provider"];
  };
  "/v1/login/{provider}/callback": {
    get: operations["callback_provider"];
  };
  "/v1/auth/recovery": {
    post: operations["recovery"];
  };
  "/v1/auth/recovery/submit": {
    post: operations["submitPassword"];
  };
  "/v1/files/token/table/{table}/id/{id}/column/{column}": {
    get: operations["issueFileAccessToken"];
  };
  "/v1/files/upload": {
    post: operations["uploadFile"];
  };
  "/v1/files/{filename}": {
    get: operations["downloadFile"];
    delete: operations["deleteFile"];
  };
  "/v1/files/public/{table}/{id}/{column}/{filename}": {
    get: operations["downloadPublicFile"];
  };
  "/v1/multiple_files/upload": {
    post: operations["uploadFile"];
  };
  "/v1/export/token/extension/{extension}": {
    post: operations["issueExportToken"];
  };
  "/v1/export": {
    get: operations["export"];
  };
  "/v1/export/files/token": {
    post: operations["issueExportFileToken"];
  };
  "/v1/export/files": {
    get: operations["export"];
  };
  "/v1/action/{table}/{column}/{rowId}": {
    post: operations["action"];
  };
  "/v1/query/{queryName}": {
    get: operations["query"];
  };
  "/v1/storage/token": {
    post: operations["storage-token"];
  };
  "/v1/storage/files/{table}/{rowId}/{column}/{filename}": {
    get: operations["storage-file"];
  };
  "/v1/version": {
    get: {
      responses: {
        200: {
          content: {
            "application/json": {
              version: string;
              [key: string]: unknown | undefined;
            };
          };
        };
      };
    };
  };
  "/v1/rawsql": {
    post: operations["rawsql"];
  };
  "/v1/role/{roleName}/openapi.yaml": {
    get: operations["openapi.yaml"];
  };
  "/v1/search/location/{query}": {
    get: operations["query"];
  };
  "/v1/rawschema": {
    get: {
      responses: {
        /** @description default response */
        200: never;
      };
    };
  };
  "/v1/env": {
    get: {
      responses: {
        /** @description default response */
        200: never;
      };
    };
  };
  "/authenticate": {
    get: {
      responses: {
        /** @description default response */
        200: never;
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: never;
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {
  migrate: {
    requestBody: {
      content: {
        "application/json": {
          operations: {
            /** @enum {string} */
            operation: "Alter" | "Create" | "Drop";
            /** @enum {string} */
            resource:
              | "Column"
              | "ManyToManyRelation"
              | "OneToManyRelation"
              | "Permission"
              | "Role"
              | "Table"
              | "View"
              | "Insight"
              | "Trigger"
              | "Query"
              | "Index"
              | "AuthProvider";
            migration: Record<string, never>;
          }[];
        };
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            results: {
              id: number;
              name: string;
              active: boolean;
              schema: {
                [key: string]: unknown | undefined;
              };
              up: string;
              down: string;
              description?: string | null;
              createdAt?: number;
            }[];
          };
        };
      };
    };
  };
  rollback: {
    requestBody: {
      content: {
        "application/json": {
          rollbacks: number;
        };
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            ok: boolean;
          };
        };
      };
    };
  };
  getMigrations: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            items: {
              id: number;
              name: string;
              active: boolean;
              schema: {
                [key: string]: unknown | undefined;
              };
              up: string;
              down: string;
              createdAt: number;
              description?: string | null;
            }[];
            pagination: {
              /** @default 0 */
              limit?: number;
              /** @default 0 */
              offset?: number;
              /** @default 0 */
              total?: number;
            };
          };
        };
      };
    };
  };
  execute: {
    requestBody: {
      content: {
        "application/json": {
          operations: {
            /** @enum {string} */
            operation:
              | "Delete"
              | "Insert"
              | "Select"
              | "Update"
              | "AddRelation"
              | "RemoveRelation"
              | "Aggregate"
              | "Insight";
            instruction: Record<string, never>;
          }[];
        };
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            results: {
              [key: string]: unknown | undefined;
            };
          };
        };
      };
    };
  };
  getTables: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            pagination: {
              /** @default 50 */
              limit?: number;
              /** @default 0 */
              offset?: number;
              /** @default 0 */
              total?: number;
            };
            items: {
              name: string;
              columns: {
                fieldType: string;
                name: string;
                [key: string]: unknown | undefined;
              }[];
              views: {
                name: string;
                query: {
                  [key: string]: unknown | undefined;
                };
              }[];
              compositeIndexes?: string[][] | null;
              category?: string | null;
            }[];
          };
        };
      };
    };
  };
  getAllRolesAndPermissions: {
    responses: {
      200: {
        content: {
          "application/json": {
            roles: {
              [key: string]: unknown | undefined;
            }[];
          };
        };
      };
    };
  };
  getSchema: {
    responses: {
      200: {
        content: {
          "application/json": {
            tables: {
              name: string;
              columns: {
                name: string;
                type: string;
                description?: string;
                definition?: {
                  [key: string]: unknown | undefined;
                } | null;
                metadata?: {
                  [key: string]: unknown | undefined;
                } | null;
                references?: {
                  targetTable: string;
                  column: string;
                  type?: string;
                  origin?: boolean;
                  onDelete?: string;
                  onUpdate?: string;
                } | null;
                isHidden?: boolean;
              }[];
              roles: {
                name: string;
                permissions: {
                  action: string;
                  condition: {
                    [key: string]: unknown | undefined;
                  };
                }[];
              }[];
              views: {
                name?: string;
                baseCondition?: {
                  [key: string]: unknown | undefined;
                };
                query?: {
                  [key: string]: unknown | undefined;
                };
                sorts?: {
                  [key: string]: unknown | undefined;
                }[];
                roles?: {
                  name: string;
                  permissions: {
                    action: string;
                    condition: {
                      [key: string]: unknown | undefined;
                    };
                  }[];
                }[];
              }[];
              insights: {
                name: string;
                columns: {
                  name: string;
                  type: string;
                  description?: string;
                }[];
                insight: {
                  [key: string]: unknown | undefined;
                };
                baseCondition: {
                  [key: string]: unknown | undefined;
                };
                sorts: {
                  [key: string]: unknown | undefined;
                }[];
                params?: string[];
                registeredParams: {
                  [key: string]: unknown | undefined;
                };
              }[];
              triggers: {
                name: string;
                event: string;
                destination?: string;
                maxAttempts: number;
                webhook: {
                  [key: string]: unknown | undefined;
                };
              }[];
              indexes: {
                name: string;
                type: string;
                condition: string;
                unique: boolean;
                columns: {
                  name?: string;
                }[];
              }[];
              primaryKey: string;
            }[];
            queries?: {
              name?: string;
              columns?: {
                name: string;
                type: string;
              }[];
              type?: string;
              query?: string;
              params?: {
                [key: string]: unknown | undefined;
              } | null;
            }[];
            authProviders?: {
              id?: string;
              client_id?: string;
              client_secret?: string;
              provider_name?: string;
              type?: string;
              [key: string]: unknown | undefined;
            }[];
          };
        };
      };
    };
  };
  getViewRows: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        condition?: {
          [key: string]: unknown | undefined;
        };
        params?: {
          [key: string]: unknown | undefined;
        };
        fields?: string[];
        groupBy?: string[];
        populate?: string[];
        join?: string;
        orderBy?: {
          [key: string]: unknown | undefined;
        };
      };
      path: {
        view: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            items: {
              [key: string]: unknown | undefined;
            }[];
            pagination: {
              page: number;
              total: number;
            };
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": {
            /** @default 401 */
            statusCode: number;
            /** @default 401 */
            status: string;
            /** @default Please login to proceed */
            message: string;
          };
        };
      };
    };
  };
  getViewRow: {
    parameters: {
      query: {
        populate?: string[];
        params?: {
          [key: string]: unknown | undefined;
        };
        join?: string;
        fields?: string[];
      };
      path: {
        view: string;
        rowId: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            items: {
              [key: string]: unknown | undefined;
            }[];
            pagination: {
              page: number;
              total: number;
            };
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": {
            /** @default 401 */
            statusCode: number;
            /** @default 401 */
            status: string;
            /** @default Please login to proceed */
            message: string;
          };
        };
      };
    };
  };
  getRows: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        condition?: {
          [key: string]: unknown | undefined;
        };
        fields?: string[];
        populate?: string[];
        groupBy?: string[];
        join?: string;
        orderBy?: {
          [key: string]: unknown | undefined;
        };
      };
      path: {
        table: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            items: {
              [key: string]: unknown | undefined;
            }[];
            total_rows?: number;
            pagination: {
              page: number;
              total: number;
            };
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": {
            /** @default 401 */
            statusCode: number;
            /** @default 401 */
            status: string;
            /** @default Please login to proceed */
            message: string;
          };
        };
      };
    };
  };
  createRow: {
    parameters: {
      path: {
        table: string;
      };
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            [key: string]: unknown | undefined;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": {
            /** @default 401 */
            statusCode: number;
            /** @default 401 */
            status: string;
            /** @default Please login to proceed */
            message: string;
          };
        };
      };
      /** @description Resource Not Found */
      404: {
        content: {
          "application/json": {
            /** @default 404 */
            statusCode: number;
            /** @default 404 */
            status: string;
            /** @default Not found in this table */
            message: string;
          };
        };
      };
    };
  };
  getRow: {
    parameters: {
      query: {
        populate?: string[];
        condition?: {
          [key: string]: unknown | undefined;
        };
      };
      path: {
        table: string;
        rowID: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            [key: string]: unknown | undefined;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": {
            /** @default 401 */
            statusCode: number;
            /** @default 401 */
            status: string;
            /** @default Please login to proceed */
            message: string;
          };
        };
      };
      /** @description Resource Not Found */
      404: {
        content: {
          "application/json": {
            /** @default 404 */
            statusCode: number;
            /** @default 404 */
            status: string;
            /** @default Not found in this table */
            message: string;
          };
        };
      };
    };
  };
  deleteRow: {
    parameters: {
      path: {
        table: string;
        rowID: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            ok: boolean;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": {
            /** @default 401 */
            statusCode: number;
            /** @default 401 */
            status: string;
            /** @default Please login to proceed */
            message: string;
          };
        };
      };
    };
  };
  updateRow: {
    parameters: {
      path: {
        table: string;
        rowID: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: unknown | undefined;
        };
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            [key: string]: unknown | undefined;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": {
            /** @default 401 */
            statusCode: number;
            /** @default 401 */
            status: string;
            /** @default Please login to proceed */
            message: string;
          };
        };
      };
      /** @description Resource Not Found */
      404: {
        content: {
          "application/json": {
            /** @default 404 */
            statusCode: number;
            /** @default 404 */
            status: string;
            /** @default Not found in this table */
            message: string;
          };
        };
      };
    };
  };
  authorize: {
    requestBody: {
      content: {
        "application/json": {
          identifier: string;
          password?: string | null;
          /**
           * @default external_id
           * @enum {string|null}
           */
          identifierType?: "external_id" | "email" | "phone" | null;
        };
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            token: string;
          };
        };
      };
    };
  };
  passwordlessLogin: {
    requestBody: {
      content: {
        "application/json": {
          identifier: string;
          /** @enum {string} */
          identifierType?: "email" | "phone";
        };
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            message: string;
          };
        };
      };
    };
  };
  signup: {
    requestBody: {
      content: {
        "application/json": {
          identifier: string;
          password?: string | null;
          /**
           * @default external_id
           * @enum {string|null}
           */
          identifierType?: "external_id" | "email" | "phone" | null;
          /** @default user */
          role?: string | null;
        };
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            message: string;
            token?: string | null;
          };
        };
      };
    };
  };
  verifyAccount: {
    parameters: {
      query: {
        token?: string | null;
        otp_code?: string | null;
        identifier?: string | null;
        identifierType?: "phone" | "email" | null;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            token: string;
          };
        };
      };
    };
  };
  link_account: {
    parameters: {
      query: {
        target_account_token: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            message: string;
          };
        };
      };
    };
  };
  login_provider: {
    parameters: {
      query: {
        callback: string;
      };
      path: {
        provider: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            token: string;
          };
        };
      };
    };
  };
  callback_provider: {
    parameters: {
      query: {
        code: string;
        state: string;
      };
      path: {
        provider: string;
      };
    };
    responses: {
      /** @description Default Response */
      200: never;
    };
  };
  recovery: {
    parameters: {
      query: {
        redirect?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          identifier: string;
        };
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            ok: boolean;
          };
        };
      };
    };
  };
  submitPassword: {
    parameters: {
      query: {
        token: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          newPassword: string;
        };
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            ok: boolean;
          };
        };
      };
    };
  };
  issueFileAccessToken: {
    parameters: {
      query: {
        access: "write" | "read" | "delete";
      };
      path: {
        table: string;
        id: string;
        column: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            token: string;
          };
        };
      };
    };
  };
  uploadFile: {
    parameters: {
      query: {
        token: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            filename: string;
            mimetype: string;
            size: number;
            path?: string;
          }[];
        };
      };
    };
  };
  downloadFile: {
    parameters: {
      query: {
        token: string;
      };
      path: {
        filename: string;
      };
    };
    responses: {
      /** @description Default Response */
      200: never;
    };
  };
  deleteFile: {
    parameters: {
      query: {
        token: string;
      };
      path: {
        filename: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            filename: string;
            mimetype: string;
            size: number;
            path?: string;
          };
        };
      };
    };
  };
  downloadPublicFile: {
    parameters: {
      path: {
        filename: string;
        id: string;
        column: string;
        table: string;
      };
    };
    responses: {
      /** @description Default Response */
      200: never;
    };
  };
  issueExportToken: {
    parameters: {
      path: {
        extension: "csv" | "xlsx";
      };
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            token: string;
          };
        };
      };
    };
  };
  export: {
    parameters: {
      query: {
        token: string;
      };
    };
    responses: {
      /** @description Default Response */
      200: never;
    };
  };
  issueExportFileToken: {
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            token: string;
          };
        };
      };
    };
  };
  action: {
    parameters: {
      path: {
        table: string;
        column: string;
        rowId: string;
      };
    };
    responses: {
      /** @description Default Response */
      200: never;
    };
  };
  query: {
    parameters: {
      path: {
        query: string;
      };
    };
    responses: {
      /** @description Default Response */
      200: never;
    };
  };
  "storage-token": {
    responses: {
      200: {
        content: {
          "application/json": {
            token: string;
          };
        };
      };
    };
  };
  "storage-file": {
    parameters: {
      query: {
        token: string;
        "content-disposition"?: string;
      };
      path: {
        table: string;
        column: string;
        rowId: string;
        filename: string;
      };
    };
    responses: {
      /** @description Default Response */
      200: never;
    };
  };
  rawsql: {
    requestBody: {
      content: {
        "application/json": {
          query: string;
        };
      };
    };
    responses: {
      /** @description Default Response */
      200: never;
    };
  };
  "openapi.yaml": {
    parameters: {
      path: {
        roleName: string;
      };
    };
    responses: {
      /** @description Default Response */
      200: never;
    };
  };
}
